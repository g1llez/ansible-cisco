---

#
# Inner loop for ACLs
#

- name: Initializing variable for each ACLs
  set_fact:
    aces_dict: []
    acl_any: "{{ { 'any' : 'true' } }}"
    acl_log: "{{ { 'set' : 'true' } }}"

#
# Setting ACLs dictionnary for standard
#
- name: Creating ACLs dictionary for standard list
  vars:
    acl_source: "{{ {'host' : aces_item.name}
                          if aces_item.wildcard is undefined else
                    {'address' : aces_item.name,
                     'wildcard_bits' : aces_item.wildcard
                    }
                 }}"
    logging: "{{ acl_log if aces_item.log is defined else {} }}"
  set_fact:
    aces_dict: "{{ aces_dict | default([]) +
                  [{ 'grant' : aces_item.grant | default('permit'),
                     'sequence' :
                         ( acl_item.acls |
                           ansible.utils.index_of('eq', aces_item) + 1 ) * 10,
                     'source' : acl_source,
                     'log' : logging
                  }]
                }}"
  with_items: "{{ acl_item.acls }}"
  when: acl_item.type | default('standard') == 'standard'
  loop_control:
    loop_var: aces_item

#
# Setting ACLs dictionnary for extended
#
- name: Creating ACLs dictionary for extended list
  vars:
    acl_source: "{{ {'host' : aces_item.name}
                          if aces_item.wildcard is undefined else
                    {'address' : aces_item.name,
                     'wildcard_bits' : aces_item.wildcard
                    }
                 }}"

    logging: "{{ acl_log if aces_item.log is defined else {} }}"
  set_fact:
    aces_dict: "{{ aces_dict | default([]) +
                   [{ 'grant' : aces_item.grant | default('permit'),
                     'sequence' :
                         ( acl_item.acls |
                           ansible.utils.index_of('eq', aces_item) + 1 ) * 10,
                      'destination' : acl_any,
                      'protocol' : 'ip',
                      'source' :
                         ( acl_source if aces_item.name != 'any' else
                           acl_any ),
                      'log' : logging
                   }]
              }}"
  with_items: "{{ acl_item.acls }}"
  when: acl_item.type | default('standard') == 'extended'
  loop_control:
    loop_var: aces_item

#
# Combining ACES in the ACLs
#
- name: Creating ACLs dictionary
  set_fact:
    acls_dict: "{{ acls_dict | default([]) +
                   [{ 'acl_type' : acl_item.type | default('standard') ,
                      'name' : acl_item.name,
                      'aces' : aces_dict
                   }]
                }}"
