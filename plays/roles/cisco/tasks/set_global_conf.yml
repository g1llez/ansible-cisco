---

#
# Setting global configuration
#

#
# Setting Hostname
#
- name: Setting Hostname
  cisco.ios.ios_system:
    hostname: "{{ hostname }}"
    domain_name: "{{ domain }}"
  notify: SaveConfig
  register: output

#
# Setting NTP
#
- name: Creating NTP dictionary
  set_fact:
    ntp_dict: "{{ ntp_dict | default([]) +
                  [{ 'peer' : item.name,
                     'use_ipv4' : 'true',
                     'prefer' : item.prefer|default('false'),
                     'source' : item.source|default('')
                  }]
               }}"
  with_items: "{{ ntp_server_list }}"
  when: ntp_server_list is defined
  register: output

- name: Setting NTP servers
  cisco.ios.ios_ntp_global:
    config:
      peers:
        "{{ ntp_dict }}"
    state: overridden
  when: ntp_dict is defined
  notify: SaveConfig
  changed_when: false
  register: output_ntp

- name: Checking if NTP config changed
  set_fact:
    changed: "{{ output_ntp.before != output_ntp.after }}"
  changed_when: changed
  when: ntp_dict is defined
  notify: SaveConfig
  register: output

# Removing config if not SNMP configuration provided
- name: If no config for NTP, remove them
  cisco.ios.ios_ntp_global:
    state: deleted
  notify: SaveConfig
  when: ntp_dict is undefined

#
# Setting DNS servers
#
- name: Settings name servers
  cisco.ios.ios_system:
    name_servers:
      "{{ dns_server_list }}"
    state: present
  notify: SaveConfig
  register: output
  when: dns_server_list is defined and
        dns_server_list is iterable

# Removing config if not SNMP configuration provided
- name: Getting current configuration for DNS servers if need to remove them
  cisco.ios.ios_command:
    commands: show running-config | inc ip name-server
  when: not (dns_server_list is defined and
             dns_server_list is iterable)
  register: current_list

- name: Removing name-server config if present
  cisco.ios.ios_config:
    commands: no ip name-server
  notify: SaveConfig
  when: not (dns_server_list is defined and
             dns_server_list is iterable)
        and current_list.stdout[0] != ""
  register: output

#
# Setting SNMP configuration
#
- name: Setting SNMP configuration
  cisco.ios.ios_snmp_server:
    config:
      "{{ snmp_config_dict }}"
    state: replaced
  when: snmp_config_dict is defined
  changed_when: false
  register: output_snmp

- name: Checking if SNMP config changed
  set_fact:
    changed: "{{ output_snmp.before != output_snmp.after }}"
  changed_when: changed
  when: output_snmp is defined and output_snmp.after is defined
  notify: SaveConfig
  register: output

# Removing config if not SNMP configuration provided
- name: Getting current configuration for SNMP if need to remove them
  cisco.ios.ios_command:
    commands: show running-config | inc snmp-server
  when: snmp_config_dict is undefined
  register: current_snmp_cfg

- name: Removing SNMP config if present
  cisco.ios.ios_snmp_server:
    state: deleted
  notify: SaveConfig
  when: snmp_config_dict is undefined
        and current_snmp_cfg.stdout[0] != ""
  register: output
